version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: ../config/docker/Dockerfile.backend
    container_name: attendance-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/attendance
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-secret-key
      FACE_SERVICE_URL: http://face-service:8000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - attendance-network

  # Face Recognition Service
  face-service:
    build:
      context: ./face-service
      dockerfile: ../config/docker/Dockerfile.face-service
    container_name: attendance-face-service
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      PYTHONUNBUFFERED: 1
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: attendance
      DB_USER: postgres
      DB_PASSWORD: postgres123
    volumes:
      - ./face-service:/app
      - face_models:/app/models
    depends_on:
      - postgres
    networks:
      - attendance-network

  # Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: ../config/docker/Dockerfile.frontend
    container_name: attendance-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    networks:
      - attendance-network

volumes:
  face_models:
    driver: local